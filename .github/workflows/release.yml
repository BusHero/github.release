name: release
on: push
jobs:
  build-project:
    name: Build Project
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0.x"
      - name: Build
        run: ./build.sh --publish-folder ./publish/
      - name: Publih build result
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./publish/
  create-release:
    name: Release Project
    runs-on: ubuntu-latest
    needs: build-project
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build
      - name: Archive application
        uses: thedoctor0/zip-release@master
        with:
          filename: build.zip
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v.${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build.zip
          asset_name: build-v${{ github.run_number }}.zip
          asset_content_type: application/zip
